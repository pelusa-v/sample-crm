// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sample_crm.Data;

#nullable disable

namespace sample_crm.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("sample_crm.Core.Entities.Flow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("FlowStateId")
                        .HasColumnType("int");

                    b.Property<bool>("Freeze")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("FlowStateId");

                    b.ToTable("Flows");
                });

            modelBuilder.Entity("sample_crm.Core.Entities.FlowState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Default")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("FlowStates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Default = true,
                            Name = "Validación previa"
                        },
                        new
                        {
                            Id = 2,
                            Default = false,
                            Name = "Preparación de informes"
                        },
                        new
                        {
                            Id = 3,
                            Default = false,
                            Name = "Recepción de legalización"
                        },
                        new
                        {
                            Id = 4,
                            Default = false,
                            Name = "Firma de partes"
                        });
                });

            modelBuilder.Entity("sample_crm.Core.Entities.Flow", b =>
                {
                    b.HasOne("sample_crm.Core.Entities.FlowState", "FlowState")
                        .WithMany("Flows")
                        .HasForeignKey("FlowStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlowState");
                });

            modelBuilder.Entity("sample_crm.Core.Entities.FlowState", b =>
                {
                    b.Navigation("Flows");
                });
#pragma warning restore 612, 618
        }
    }
}
